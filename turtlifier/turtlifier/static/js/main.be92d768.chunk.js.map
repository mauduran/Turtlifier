{"version":3,"sources":["app/components/SeparatorSelector/SeparatorSelector.jsx","app/pages/TurtlForm/TurtlForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["SeparatorSelector","onChange","separator","FormControl","variant","sx","m","minWidth","InputLabel","id","Select","labelId","value","label","MenuItem","Input","styled","display","DarkButton","Button","backgroundColor","color","textTransform","TurtlForm","useState","setSeparator","hasTitles","setHasTitles","titleLineNum","setTitleLineNum","dataLineNum","setDataLineNum","lastLineToProcess","setLastLineToProcess","dataPrefix","setDataPrefix","dataPrefixUri","setDataPrefixUri","predicatePrefix","setPredicatePrefix","predicatePrefixUri","setPredicatePrefixUri","file","setFile","fileName","setfileName","loaded","setLoaded","errorLoading","seterrorLoading","setmessage","setuploadPercentage","useEffect","axios","get","then","res","status","parseInt","data","lastLineToProcessStr","dataPrefixStr","replace","dataPrefixUriStr","predicatePrefixStr","predicatePrefixUriStr","onSubmit","e","a","preventDefault","formData","FormData","append","entries","pair","console","log","post","headers","responseType","onUploadProgress","progressEvent","Math","round","total","responseFile","download","split","response","msg","onFileChange","target","files","length","name","Card","width","minHeight","height","marginBottom","style","justifyContent","flexDirection","CardContent","flex","alignItems","Typography","fontSize","textAlign","gutterBottom","FormGroup","FormControlLabel","control","Switch","checked","prevHasTitles","labelPlacement","className","Box","component","TextField","type","InputLabelProps","shrink","InputProps","inputProps","min","disabled","required","marginTop","htmlFor","accept","event","flexGrow","marginLeft","CardActions","size","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be92d768.chunk.js","sourcesContent":["\n/*\n############################################\n############################################\n###     Date: December 7, 2021           ###\n###     @author Mauricio Duran Padilla   ###\n###     @author Juan Pablo Ramos Robles  ###\n###     @author Alfonso Ram√≠rez Casto    ###\n############################################\n############################################\n*/\nimport React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport default function SeparatorSelector({ onChange, separator }) {\n    return (\n        <div>\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 180 }}>\n                <InputLabel id=\"separator-helper-label\">Separator</InputLabel>\n                <Select\n                    labelId=\"separator-helper-label\"\n                    id=\"separator-select-helper\"\n                    value={separator}\n                    label=\"Separator\"\n                    onChange={onChange}\n                    \n                >\n                    <MenuItem value={\",\"}>Comma ',' </MenuItem>\n                    <MenuItem value={\";\"}>Semicolon ';' </MenuItem>\n                    <MenuItem value={\"|\"}>Pipe '|' </MenuItem>\n                    <MenuItem value={\" \"}>Space</MenuItem>\n                    <MenuItem value={\"\\t\"}>Tab</MenuItem>\n                </Select>\n\n            </FormControl>\n        </div>\n    )\n}\n","/*\n############################################\n############################################\n###     Date: December 7, 2021           ###\n###     @author Mauricio Duran Padilla   ###\n###     @author Juan Pablo Ramos Robles  ###\n###     @author Alfonso Ram√≠rez Casto    ###\n############################################\n############################################\n*/\n\nimport './TurtlForm.css';\nimport download from \"downloadjs\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react'\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport SeparatorSelector from '../../components/SeparatorSelector/SeparatorSelector';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport { Switch, Box } from '@mui/material';\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst DarkButton = styled(Button)({\n    backgroundColor: \"#282c34\",\n    color: \"white\",\n    textTransform: 'none',\n    '&:hover': {\n        backgroundColor: \"#424957\",\n    },\n});\n\n\nexport default function TurtlForm() {\n    const [separator, setSeparator] = useState(\",\");\n    const [hasTitles, setHasTitles] = useState(true);\n    const [titleLineNum, setTitleLineNum] = useState(\"\");\n    const [dataLineNum, setDataLineNum] = useState(\"\");\n    const [lastLineToProcess, setLastLineToProcess] = useState(\"\");\n    const [dataPrefix, setDataPrefix] = useState(\"s\")\n    const [dataPrefixUri, setDataPrefixUri] = useState(\"https://ex.org/data/\");\n    const [predicatePrefix, setPredicatePrefix] = useState(\"pred\");\n    const [predicatePrefixUri, setPredicatePrefixUri] = useState(\"https://ex.org/pred#\");\n    const [file, setFile] = useState('');\n    const [fileName, setfileName] = useState(\"\");\n    const [loaded, setLoaded] = useState(false)\n    const [errorLoading, seterrorLoading] = useState(false)\n\n    // Notification Alert\n    const [message, setmessage] = useState('');\n\n    // Progress Bar\n    const [uploadPercentage, setuploadPercentage] = useState(0);\n\n    // Spinner\n    const [loading, setLoading] = useState(true);\n    const [uploadInProgress, setUploadInProgress] = useState(false);\n\n    useEffect(() => {\n        // Get default configuration from server (which reads from config.ini file)\n        axios.get(`/config`)\n            .then(res => {\n                if (res.status !== 200) setLoaded(true);\n                //Set Title Tine to its default value#\n                setTitleLineNum(parseInt(res.data.titleLineNum || ''));\n                //Set Data Start Line to its default value\n                setDataLineNum(parseInt(res.data.dataLineNum || ''));\n\n                //Last line to process to its default value \n                let lastLineToProcessStr = res.data.lastLineToProcess;\n                setLastLineToProcess(lastLineToProcessStr ? parseInt(lastLineToProcessStr) : '');//Validate if there is a value. if not use '' value\n                //Set Data prefix name to its default value\n                let dataPrefixStr = res.data.dataPrefix;\n                setDataPrefix(dataPrefixStr.replace(\":\", \"\"));\n                //Set Data prefix Uri to its default value\n                let dataPrefixUriStr = res.data.dataPrefixUri;\n                setDataPrefixUri(dataPrefixUriStr.replace(\"<\", \"\").replace(\">\", \"\"));\n                //Set Prediate prefix to its default value\n                let predicatePrefixStr = res.data.predicatePrefix\n                setPredicatePrefix(predicatePrefixStr.replace(\":\", \"\"));\n                //Set Predicate Uri to its default value\n                let predicatePrefixUriStr = res.data.predicatePrefixUri\n\n                setPredicatePrefixUri(predicatePrefixUriStr.replace(\"<\", \"\").replace(\">\", \"\"));\n                //Set Separator to its default value\n                setSeparator(res.data.separator);\n\n            });\n    }, [])\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        seterrorLoading(false)\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('separator', separator);\n        formData.append('has_titles', hasTitles);\n\n        if (!hasTitles)\n            formData.append('title_line_num', -1);\n        else if (titleLineNum && titleLineNum !== \"\")\n            formData.append('title_line_num', titleLineNum);\n        else\n            formData.append('title_line_num', 1);\n\n        if (dataLineNum && dataLineNum !== \"\")\n            formData.append('data_line_num', dataLineNum);\n        else if (!hasTitles)\n            formData.append('data_line_num', 1);\n        else\n            formData.append('data_line_num', 2);\n\n        if (lastLineToProcess && lastLineToProcess !== \"\")\n            formData.append('last_line_to_process', lastLineToProcess);\n        else\n            formData.append('last_line_to_process', -1);\n\n        formData.append('prefix_data', dataPrefix);\n        formData.append('prefix_data_uri', dataPrefixUri);\n        formData.append('prefix_predicate', predicatePrefix);\n        formData.append('prefix_predicate_uri', predicatePrefixUri);\n        formData.append('has_titles', hasTitles);\n\n        // Display the key/value pairs\n        for (var pair of formData.entries()) {\n            console.log(pair[0] + ': ' + pair[1]);\n        }\n\n        try {\n            const responseFile = await axios.post('/turtlify', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                },\n                responseType: 'blob',\n                onUploadProgress: progressEvent => {\n                    setuploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)))\n                }\n            });\n\n            download(responseFile.data, fileName.split('.')[0] + '.ttl');\n        } catch (error) {\n            if (error.response.status === 500) {\n                setmessage(\"There was a problem with the server\");\n                seterrorLoading(true)\n            } else {\n                setmessage(error.response.data.msg)\n                seterrorLoading(true)\n            }\n        }\n    }\n\n    const onFileChange = async (e) => {\n        if (!e.target.files || !e.target.files.length || !e.target.files[0]) {\n            setmessage(\"No File Added.\")\n        }\n        if (e.target.files && e.target.files.length) {\n            setFile(e.target.files[0]);\n            setfileName(e.target.files[0].name.replace(\".csv\", \"\"));\n        } else {\n            setFile(null);\n            setfileName(\"\");\n        }\n    }\n\n    return (\n        <Card sx={{\n            minWidth: \"370px\",\n            width: \"35%\",\n            minHeight: \"700px\",\n            height: \"80vh\",\n            marginBottom: \"15px\",\n        }}>\n            <form\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    flexDirection: \"column\"\n                }}\n                onSubmit={onSubmit} >\n                <CardContent sx={{ display: \"flex\", flex: 1, flexDirection: \"column\", alignItems: \"start\", justifyContent: \"space-between\" }}>\n                    <Typography variant=\"h2\" sx={{ width: \"100%\", fontSize: 22, textAlign: \"center\" }} color=\"text.primary\" gutterBottom>\n                        Convert your csv files into Turtl RDF triples!\n                    </Typography>\n                    {\n                        (loaded && <span style={{ color: 'red', fontSize: '12px' }}>There was an error loading the configuration values from the config.ini file</span>)\n                    }\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={hasTitles}\n                                    onChange={() => setHasTitles((prevHasTitles) => !prevHasTitles)} />\n                            }\n                            labelPlacement=\"start\"\n                            label=\"File with titles\" />\n                    </FormGroup>\n                    <div className=\"dividr\">\n                        <Typography variant=\"h3\" sx={{ width: \"100%\", fontSize: 18 }} color=\"text.secondary\" gutterBottom>\n                            Optional\n                        </Typography>\n                    </div>\n\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            width: \"100%\"\n                        }} >\n                        <TextField\n                            id=\"title-line-number\"\n                            label=\"Title line #\"\n                            type=\"number\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            sx={{ width: \"48%\" }}\n                            InputProps={{\n                                inputProps: {\n                                    min: 1\n                                }\n                            }}\n                            variant=\"standard\"\n                            disabled={!hasTitles}\n                            required\n                            value={hasTitles ? titleLineNum || \"\" : -1}\n                            onChange={(e) => setTitleLineNum(parseInt(e.target.value))}\n                        />\n\n                        <TextField\n                            id=\"data-line-number\"\n                            label=\"Data start line #\"\n                            type=\"number\"\n                            sx={{ width: \"48%\" }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    min: 1\n                                }\n                            }}\n                            variant=\"standard\"\n                            required\n                            value={dataLineNum || \"\"}\n                            onChange={(e) => setDataLineNum(parseInt(e.target.value))}\n                        />\n\n                    </Box>\n\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            width: \"100%\",\n                            marginTop: \"10px\"\n                        }} >\n                        <TextField\n                            id=\"last-line-to-read\"\n                            label=\"Last line to process\"\n                            type=\"number\"\n                            sx={{ width: \"48%\" }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    min: 1\n                                }\n                            }}\n                            value={lastLineToProcess}\n                            onChange={(e) => setLastLineToProcess(e.target.value)}\n                            variant=\"standard\"\n                        />\n                    </Box>\n\n\n                    <div className=\"dividr\" />\n\n                    <SeparatorSelector onChange={(e) => { setSeparator(e.target.value) }} separator={separator} />\n\n                    <div style={{ width: \"100%\" }}>\n                        <Typography variant=\"h3\" sx={{ fontSize: 16 }} color=\"text.primary\">\n                            Data prefix\n                        </Typography>\n                        <Box\n                            component=\"div\"\n                            sx={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-between\",\n                                width: \"100%\",\n                            }} >\n                            <TextField\n                                id=\"subject-prefix-name\"\n                                label=\"Name\"\n                                InputProps={{\n                                    inputProps: {\n                                        min: 1\n                                    }\n                                }}\n                                variant=\"standard\"\n                                sx={{\n                                    marginTop: \"10px\",\n                                    width: \"30%\",\n                                }}\n                                value={dataPrefix}\n                                required\n                                onChange={(e) => setDataPrefix(e.target.value)} />\n\n                            <TextField\n                                id=\"subject-prefix-uri\"\n                                label=\"Uri\"\n                                InputProps={{\n                                    inputProps: {\n                                        min: 1\n                                    }\n                                }}\n                                variant=\"standard\"\n                                sx={{\n                                    marginTop: \"10px\",\n                                    minWidth: \"68%\",\n                                }}\n                                value={dataPrefixUri}\n                                required\n                                onChange={(e) => setDataPrefixUri(e.target.value)} />\n\n                        </Box>\n                    </div>\n\n                    <div style={{ width: \"100%\", }}>\n                        <Typography variant=\"h3\" sx={{ fontSize: 16, marginTop: \"10px\" }} color=\"text.primary\">\n                            Predicate prefix\n                        </Typography>\n                        <Box\n                            component=\"div\"\n                            sx={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-between\",\n                                width: \"100%\",\n                            }} >\n                            <TextField\n                                id=\"subject-prefix-name\"\n                                label=\"Name\"\n                                InputProps={{\n                                    inputProps: {\n                                        min: 1\n                                    }\n                                }}\n                                variant=\"standard\"\n                                sx={{\n                                    marginTop: \"10px\",\n                                    width: \"30%\",\n                                }}\n                                value={predicatePrefix}\n                                required\n                                onChange={(e) => setPredicatePrefix(e.target.value)} />\n\n                            <TextField\n                                id=\"subject-prefix-uri\"\n                                label=\"Uri\"\n                                InputProps={{\n                                    inputProps: {\n                                        min: 1\n                                    }\n                                }}\n                                variant=\"standard\"\n                                sx={{\n                                    marginTop: \"10px\",\n                                    minWidth: \"68%\",\n                                }}\n                                value={predicatePrefixUri}\n                                required\n                                onChange={(e) => setPredicatePrefixUri(e.target.value)} />\n\n                        </Box>\n                    </div>\n\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                            width: \"100%\",\n                            marginTop: \"10px\"\n                        }} >\n\n                        <label htmlFor=\"contained-button-file\">\n                            <Input accept=\"text/csv\" id=\"contained-button-file\" type=\"file\" onChange={onFileChange} />\n                            <DarkButton component=\"span\" variant=\"contained\">\n                                Upload CSV file\n                            </DarkButton>\n                        </label>\n\n                        <TextField\n                            id=\"file-name\"\n                            label=\"File name\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={(event) => setfileName(event.target.value)}\n                            sx={{ flex: 1, flexGrow: 1, marginLeft: \"10px\" }}\n                            variant=\"standard\"\n                            required\n                            value={fileName}\n                        />\n                    </Box>\n                    {\n                        (errorLoading && <span style={{ color: 'red', fontSize: '12px' }}>There was an error procesing the file, there was a problem with the server</span>)\n                    }\n                </CardContent>\n\n                <div className=\"dividr\" />\n\n                <CardActions sx={{ marginBottom: \"10px\", height: \"auto\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    <DarkButton size=\"large\" variant=\"contained\" component=\"button\" type=\"submit\">\n                        Generate Turtl File\n                    </DarkButton>\n                </CardActions>\n\n            </form>\n        </Card>\n    );\n}\n","/*\n############################################\n############################################\n###     Date: December 7, 2021           ###\n###     @author Mauricio Duran Padilla   ###\n###     @author Juan Pablo Ramos Robles  ###\n###     @author Alfonso Ram√≠rez Casto    ###\n############################################\n############################################\n*/\n\nimport './App.css';\nimport React from 'react';\nimport TurtlForm from './app/pages/TurtlForm/TurtlForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <h1 className=\"centered\">Turtlifier!</h1>\n        <TurtlForm />\n    </div>\n  );\n}\n\nexport default App;\n","/*\n############################################\n############################################\n###     Date: December 7, 2021           ###\n###     @author Mauricio Duran Padilla   ###\n###     @author Juan Pablo Ramos Robles  ###\n###     @author Alfonso Ram√≠rez Casto    ###\n############################################\n############################################\n*/\n\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\n/*\n############################################\n############################################\n###     Date: December 7, 2021           ###\n###     @author Mauricio Duran Padilla   ###\n###     @author Juan Pablo Ramos Robles  ###\n###     @author Alfonso Ram√≠rez Casto    ###\n############################################\n############################################\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}