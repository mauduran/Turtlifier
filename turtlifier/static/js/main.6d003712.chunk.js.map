{"version":3,"sources":["app/components/SeparatorSelector/SeparatorSelector.jsx","app/pages/TurtlForm/TurtlForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["SeparatorSelector","onChange","separator","FormControl","variant","sx","m","minWidth","InputLabel","id","Select","labelId","value","label","MenuItem","Input","styled","display","DarkButton","Button","backgroundColor","color","textTransform","TurtlForm","useState","setSeparator","hasTitles","setHasTitles","titleLineNum","setTitleLineNum","dataLineNum","setDataLineNum","firstLineToProcess","setFirstLineToProcess","lastLineToProcess","setLastLineToProcess","subjectPrefix","setSubjectPrefix","subjectPrefixUri","setSubjectPrefixUri","predicatePrefix","setPredicatePrefix","predicatePrefixUri","setPredicatePrefixUri","file","setFile","fileName","setfileName","setmessage","setuploadPercentage","onSubmit","e","a","preventDefault","formData","FormData","append","console","log","axios","post","headers","responseType","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","responseFile","download","data","split","response","status","msg","onFileChange","target","files","length","name","Card","width","minHeight","height","marginBottom","style","justifyContent","flexDirection","CardContent","flex","alignItems","Typography","fontSize","textAlign","gutterBottom","FormGroup","FormControlLabel","control","Switch","checked","prevHasTitles","labelPlacement","className","Box","component","TextField","type","InputLabelProps","shrink","InputProps","inputProps","min","marginTop","htmlFor","accept","contentEditable","flexGrow","marginLeft","CardActions","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d003712.chunk.js","sourcesContent":["import React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport default function SeparatorSelector({ onChange, separator }) {\n    return (\n        <div>\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 180 }}>\n                <InputLabel id=\"separator-helper-label\">Separator</InputLabel>\n                <Select\n                    labelId=\"separator-helper-label\"\n                    id=\"separator-select-helper\"\n                    value={separator}\n                    label=\"Separator\"\n                    onChange={onChange}\n                    \n                >\n                    <MenuItem value={\",\"}>Comma ',' </MenuItem>\n                    <MenuItem value={\";\"}>Semicolon ';' </MenuItem>\n                    <MenuItem value={\"|\"}>Pipe '|' </MenuItem>\n                    <MenuItem value={\" \"}>Space</MenuItem>\n                    <MenuItem value={\"\\t\"}>Tab</MenuItem>\n                </Select>\n\n            </FormControl>\n        </div>\n    )\n}\n","import './TurtlForm.css';\nimport download from \"downloadjs\";\nimport axios from 'axios';\nimport React, { useState } from 'react'\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport SeparatorSelector from '../../components/SeparatorSelector/SeparatorSelector';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport { Switch, Box } from '@mui/material';\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst DarkButton = styled(Button)({\n    backgroundColor: \"#282c34\",\n    color: \"white\",\n    textTransform: 'none',\n    '&:hover': {\n        backgroundColor: \"#424957\",\n    },\n});\n\n\nexport default function TurtlForm() {\n    const [separator, setSeparator] = useState(\",\");\n    const [hasTitles, setHasTitles] = useState(true);\n    const [titleLineNum, setTitleLineNum] = useState(\"\");\n    const [dataLineNum, setDataLineNum] = useState(\"\");\n    const [firstLineToProcess, setFirstLineToProcess] = useState(\"\");\n    const [lastLineToProcess, setLastLineToProcess] = useState(\"\");\n    const [subjectPrefix, setSubjectPrefix] = useState(\"s\")\n    const [subjectPrefixUri, setSubjectPrefixUri] = useState(\"https://ex.org/data/\");\n    const [predicatePrefix, setPredicatePrefix] = useState(\"pred\");\n    const [predicatePrefixUri, setPredicatePrefixUri] = useState(\"https://ex.org/pred#\");\n    const [file, setFile] = useState('');\n    const [fileName, setfileName] = useState(\"\");\n\n    // Notification Alert\n    const [message, setmessage] = useState('');\n\n    // Progress Bar\n    const [uploadPercentage, setuploadPercentage] = useState(0);\n\n    // Spinner\n    const [loading, setLoading] = useState(true);\n    const [uploadInProgress, setUploadInProgress] = useState(false);\n\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('separator', separator);\n        formData.append('hasTitles', hasTitles);\n        if (titleLineNum && titleLineNum !== \"\")\n            formData.append('titleLineNum', titleLineNum);\n        if (dataLineNum && dataLineNum !== \"\")\n            formData.append('dataLineNum', dataLineNum);\n\n        if (firstLineToProcess && firstLineToProcess !== \"\")\n            formData.append('firstLineToProcess', firstLineToProcess);\n\n        if (lastLineToProcess && lastLineToProcess !== \"\")\n            formData.append('lastLineToProcess', lastLineToProcess);\n\n        if (lastLineToProcess && lastLineToProcess !== \"\")\n            formData.append('lastLineToProcess', lastLineToProcess);\n\n        formData.append('subjectPrefix', subjectPrefix);\n        formData.append('subjectPrefixUri', subjectPrefixUri);\n        formData.append('predicatePrefix', predicatePrefix);\n        formData.append('predicatePrefixUri', predicatePrefixUri);\n        formData.append('hasTitles', hasTitles);\n\n        console.log(\"FORM DATA\");\n        console.log(formData);\n        try {\n            const responseFile = await axios.post('/turtlify', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                },\n                responseType: 'blob',\n                onUploadProgress: progressEvent => {\n                    setuploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)))\n                }\n            });\n\n            download(responseFile.data, fileName.split('.')[0] + '.ttl');\n            setmessage('File Uploaded!');\n        } catch (error) {\n            if (error.response.status === 500) {\n                setmessage(\"There was a problem with the server\");\n            } else {\n                setmessage(error.response.data.msg)\n            }\n        }\n    }\n\n    const onFileChange = async (e) => {\n        if (!e.target.files || !e.target.files.length || !e.target.files[0]) {\n            setmessage(\"No File Added.\")\n        }\n        console.log(e.target);\n        setFile(e.target.files[0]);\n        setfileName(e.target.files[0].name);\n    }\n\n\n\n    return (\n        <Card sx={{\n            minWidth: \"370px\",\n            width: \"35%\",\n            minHeight: \"700px\",\n            height: \"80vh\",\n            marginBottom: \"15px\",\n        }}>\n            <form\n                style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    flexDirection: \"column\"\n                }}\n                onSubmit={onSubmit} >\n                <CardContent sx={{ display: \"flex\", flex: 1, flexDirection: \"column\", alignItems: \"start\", justifyContent: \"space-between\" }}>\n                    <Typography variant=\"h2\" sx={{ width: \"100%\", fontSize: 22, textAlign: \"center\" }} color=\"text.primary\" gutterBottom>\n                        Convert your csv files into Turtl RDF triples!\n                    </Typography>\n\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={hasTitles}\n                                    onChange={() => setHasTitles((prevHasTitles) => !prevHasTitles)} />\n                            }\n                            labelPlacement=\"start\"\n                            label=\"File with titles\" />\n                    </FormGroup>\n                    <div className=\"dividr\">\n                        <Typography variant=\"h3\" sx={{ width: \"100%\", fontSize: 18 }} color=\"text.secondary\" gutterBottom>\n                            Optional\n                        </Typography>\n                    </div>\n\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            width: \"100%\"\n                        }} >\n                        <TextField\n                            id=\"title-line-number\"\n                            label=\"Title line #\"\n                            type=\"number\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            sx={{ width: \"48%\" }}\n                            InputProps={{\n                                inputProps: {\n                                    min: 1\n                                }\n                            }}\n                            variant=\"standard\"\n                            value={titleLineNum}\n                            onChange={(e) => setTitleLineNum(e.target.value)}\n                        />\n\n                        <TextField\n                            id=\"data-line-number\"\n                            label=\"Data start line #\"\n                            type=\"number\"\n                            sx={{ width: \"48%\" }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    min: 1\n                                }\n                            }}\n                            variant=\"standard\"\n                            value={dataLineNum}\n                            onChange={(e) => setDataLineNum(e.target.value)}\n                        />\n\n                    </Box>\n\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            width: \"100%\",\n                            marginTop: \"10px\"\n                        }} >\n                        <TextField\n                            id=\"first-line-to-read\"\n                            label=\"First line to process\"\n                            type=\"number\"\n                            sx={{ width: \"48%\" }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    min: 1\n                                }\n                            }}\n                            variant=\"standard\"\n                            value={firstLineToProcess}\n                            onChange={(e) => setFirstLineToProcess(e.target.value)}\n                        />\n\n                        <TextField\n                            id=\"last-line-to-read\"\n                            label=\"Last line to process\"\n                            type=\"number\"\n                            sx={{ width: \"48%\" }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                inputProps: {\n                                    min: 1\n                                }\n                            }}\n                            value={lastLineToProcess}\n                            onChange={(e) => setLastLineToProcess(e.target.value)}\n                            variant=\"standard\"\n                        />\n                    </Box>\n\n\n                    <div className=\"dividr\" />\n\n                    <SeparatorSelector onChange={(e) => { setSeparator(e.target.value) }} separator={separator} />\n\n                    <div style={{ width: \"100%\" }}>\n                        <Typography variant=\"h3\" sx={{ fontSize: 16 }} color=\"text.primary\">\n                            Subject prefix\n                        </Typography>\n                        <Box\n                            component=\"div\"\n                            sx={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-between\",\n                                width: \"100%\",\n                            }} >\n                            <TextField\n                                id=\"subject-prefix-name\"\n                                label=\"Name\"\n                                InputProps={{\n                                    inputProps: {\n                                        min: 1\n                                    }\n                                }}\n                                variant=\"standard\"\n                                sx={{\n                                    marginTop: \"10px\",\n                                    width: \"30%\",\n                                }}\n                                value={subjectPrefix}\n                                onChange={(e) => setSubjectPrefix(e.target.value)} />\n\n                            <TextField\n                                id=\"subject-prefix-uri\"\n                                label=\"Uri\"\n                                InputProps={{\n                                    inputProps: {\n                                        min: 1\n                                    }\n                                }}\n                                variant=\"standard\"\n                                sx={{\n                                    marginTop: \"10px\",\n                                    minWidth: \"68%\",\n                                }}\n                                value={subjectPrefixUri}\n                                onChange={(e) => setSubjectPrefixUri(e.target.value)} />\n\n                        </Box>\n                    </div>\n\n                    <div style={{ width: \"100%\", }}>\n                        <Typography variant=\"h3\" sx={{ fontSize: 16, marginTop: \"10px\" }} color=\"text.primary\">\n                            Predicate prefix\n                        </Typography>\n                        <Box\n                            component=\"div\"\n                            sx={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-between\",\n                                width: \"100%\",\n                            }} >\n                            <TextField\n                                id=\"subject-prefix-name\"\n                                label=\"Name\"\n                                InputProps={{\n                                    inputProps: {\n                                        min: 1\n                                    }\n                                }}\n                                variant=\"standard\"\n                                sx={{\n                                    marginTop: \"10px\",\n                                    width: \"30%\",\n                                }}\n                                value={predicatePrefix}\n                                onChange={(e) => setPredicatePrefix(e.target.value)} />\n\n                            <TextField\n                                id=\"subject-prefix-uri\"\n                                label=\"Uri\"\n                                InputProps={{\n                                    inputProps: {\n                                        min: 1\n                                    }\n                                }}\n                                variant=\"standard\"\n                                sx={{\n                                    marginTop: \"10px\",\n                                    minWidth: \"68%\",\n                                }}\n                                value={predicatePrefixUri}\n                                onChange={(e) => setPredicatePrefixUri(e.target.value)} />\n\n                        </Box>\n                    </div>\n\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                            width: \"100%\",\n                            marginTop: \"10px\"\n                        }} >\n\n                        <label htmlFor=\"contained-button-file\">\n                            <Input accept=\"text/csv\" id=\"contained-button-file\" type=\"file\" onChange={onFileChange} />\n                            <DarkButton component=\"span\" variant=\"contained\">\n                                Upload CSV file\n                            </DarkButton>\n                        </label>\n\n                        <TextField\n                            id=\"file-name\"\n                            label=\"File name\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            contentEditable={false}\n                            sx={{ flex: 1, flexGrow: 1, marginLeft: \"10px\" }}\n                            variant=\"standard\"\n                            value={fileName}\n                        />\n                    </Box>\n                </CardContent>\n\n                <div className=\"dividr\" />\n\n                <CardActions sx={{ marginBottom: \"10px\", height: \"auto\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    <DarkButton size=\"large\" variant=\"contained\" component=\"button\" type=\"submit\">\n                        Generate Turtl File\n                    </DarkButton>\n                </CardActions>\n\n            </form>\n        </Card>\n    );\n}\n","import './App.css';\nimport React from 'react';\nimport TurtlForm from './app/pages/TurtlForm/TurtlForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <h1 className=\"centered\">Turtlifier!</h1>\n        <TurtlForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}